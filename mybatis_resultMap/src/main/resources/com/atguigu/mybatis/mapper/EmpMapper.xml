<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.mybatis.mapper.EmpMapper">

    <!--类中属性名与表字段名不一致
        1、可以在sql中将属性名设置为别名
        2、当表字段符合Mysql使用要求，使用_，且类属性符合java要求使用驼峰
            可以在mybatis的核心配置文件中设置，将下划线映射为驼峰
            emp_id映射为empId
        3、使用resultMap自定义映射
            处理多对一关系：
                1、级联方式处理
                2、association
                3、分步查询
    -->

    <!--
        resultMap中的标签
        id resultMap的唯一标识
        type 处理映射关系的实体类的类型
        result 处理普通字段和实体类中的映射关系
        association 处理多对一的映射关系（处理实体类类型的属性）
        column 设置映射关系中的字段名
        property 设置映射关系中的属性名
        collection 处理一对多的映射关系（集合）
    -->

    <!--Emp getEmpByEmpId(@Param("empId") Integer empId);-->

    <!--
        id标识
        type 映射的实体类
    -->
    <resultMap id="empResultMap" type="Emp">
        <!--主键和属性映射
            column是字段名
            property是实体类的属性名
        -->
        <id column="emp_id" property="empId"></id>
        <!--普通字段和属性映射-->
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>
    </resultMap>

    <select id="getEmpByEmpId" resultMap="empResultMap">
        select * from t_emp where emp_id = #{empId}
    </select>

<!--    <select id="getEmpByEmpId" resultType="Emp">-->
<!--        &lt;!&ndash;select emp_id empId,emp_name empName,age,gender from t_emp where emp_id = #{empId}&ndash;&gt;-->
<!--        select * from t_emp where emp_id = #{empId}-->
<!--    </select>-->
    <!--级联方式-->
    <resultMap id="empAndDeptResultMapOne" type="Emp">
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>
        <!--    级联dept中的属性     -->
        <result column="dept_id" property="dept.deptId"></result>
        <result column="dept_name" property="dept.deptName"></result>
    </resultMap>


    <resultMap id="empAndDeptResultMap" type="Emp">
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>
        <!--dept中的映射关系
           property 要查询的属性名（Emp的dept属性）
           javaType 需要处理的属性的类型
        -->

        <association property="dept" javaType="Dept">
            <id column="dept_id" property="deptId"></id>
            <result column="dept_name" property="deptName"></result>
        </association>
    </resultMap>


    <!--Emp getEmpAndDeptByEmpId(@Param("empId") Integer empId);-->
    <select id="getEmpAndDeptByEmpId" resultMap="empAndDeptResultMap">
        select * from t_emp left join t_dept on t_emp.dept_id = t_dept.dept_id where t_emp.emp_id = #{empId}
    </select>


    <resultMap id="empAndDeptByStepResultMap" type="Emp">
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>

        <!--association
           property 属性名
           select 设置分步查询的sql的唯一标识（下一步）
           column 将该字段作为下一步查询的条件，通过该字段传值
           fetchType 分步查询的加载类型：eager立即查询，lazy延迟加载
        -->
        <!--column是需要查询的字段，通过该字段传值-->
        <association property="dept"
                     select="com.atguigu.mybatis.mapper.DeptMapper.getEmpAndDeptByStepTwo"
                     column="dept_id" fetchType="eager">

        </association>
    </resultMap>


    <!--  Emp getEmpAndDeptByStep(@Param("empId") Integer empId);  -->
    <select id="getEmpAndDeptByStep" resultMap="empAndDeptByStepResultMap">
        select * from t_emp where emp_id = #{empId}
    </select>

    <!--List<Emp> getDeptAndEmpByStepTwo(@Param("deptId") Integer deptId);-->
    <select id="getDeptAndEmpByStepTwo" resultType="Emp">
        select * from t_emp where dept_id = #{deptId}
    </select>
</mapper>
